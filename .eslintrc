// {
//   // Settings
//   "esversion"     : 6,
//   "passfail"      : false,  // Stop on first error.
//   "maxerr"        : 100,    // Maximum errors before stopping.

//   // Predefined globals whom JSHint will ignore.
//   "browser"       : true,   // Standard browser globals e.g. `window`, `document`.

//   "node"          : true,
//   "rhino"         : false,
//   "couch"         : false,
//   "wsh"           : false,   // Windows Scripting Host.

//   "jquery"        : false,
//   "prototypejs"   : false,
//   "mootools"      : false,
//   "dojo"          : false,

//   "predef"        : [  // Extra globals.
//     "require",
//     "define",
//     "notify",
//     "expect",
//     "it",
//     "afterEach",
//     "describe",
//     "jest"
//   ],

//   // Development.
//   "debug"         : false,   // Allow debugger statements e.g. browser breakpoints.
//   "devel"         : false,   // Allow development statements e.g. `console.log();`.

//   // EcmaScript 5.
//   "strict"        : true,   // Require `use strict` pragma in every file.
//   "globalstrict"  : false,  // Allow global "use strict" (also enables 'strict').

//   // The Good Parts.
//   "asi"           : false,  // Tolerate Automatic Semicolon Insertion (no semicolons).
//   "laxbreak"      : false,  // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
//   "bitwise"       : true,   // Prohibit bitwise operators (&, |, ^, etc.).
//   "boss"          : false,  // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
//   "curly"         : true,   // Require {} for every new block or scope.
//   "eqeqeq"        : false,  // Require triple equals i.e. `===`.
//   "eqnull"        : false,  // Tolerate use of `== null`.
//   "evil"          : true,  // Tolerate use of `eval`.
//   "expr"          : false,  // Tolerate `ExpressionStatement` as Programs.
//   "forin"         : false,   // Tolerate `for in` loops without `hasOwnPrototype`.
//   "immed"         : true,   // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
//   "latedef"       : false,  // Prohibit variable use before definition.
//   "loopfunc"      : true,  // Allow functions to be defined within loops.
//   "noarg"         : true,   // Prohibit use of `arguments.caller` and `arguments.callee`.
//   "regexp"        : true,   // Prohibit `.` and `[^...]` in regular expressions.
//   "regexdash"     : false,  // Tolerate unescaped last dash i.e. `[-...]`.
//   "scripturl"     : true,   // Tolerate script-targeted URLs.
//   "shadow"        : false,  // Allows re-define variables later in code e.g. `var x=1; x=2;`.
//   "supernew"      : true,  // Tolerate `new function () { ... };` and `new Object;`.
//   "undef"         : true,   // Require all non-global variables be declared before they are used.

//   // Styling prefrences.
//   "newcap"        : false,  // Require capitalization of all constructor functions e.g. `new F()`.
//   "noempty"       : false,  // Prohibit use of empty blocks.
//   "nonew"         : false,  // Prohibit use of constructors for side-effects.
//   "nomen"         : false,  // Prohibit use of initial or trailing underbars in names.
//   "onevar"        : false,  // Allow only one `var` statement per function.
//   "plusplus"      : false,  // Prohibit use of `++` & `--`.
//   "sub"           : true,   // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
//   "trailing"      : false,  // Prohibit trailing whitespaces.
//   "white"         : false   // Check against strict whitespace and indentation rules.
// }

{
  "parserOptions": {
    "ecmaVersion": 6,
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true,
  },
  "globals": {
    "require": true,
    "define": true,
    "notify": true,
    "expect": true,
    "it": true,
    "afterEach": true,
    "describe": true,
    "jest": true,
  },
  "rules": {
    "no-debugger": "error",
    "no-console": "error",
    "strict": ["error", "global"],
    "no-bitwise": "error",
    "curly": "error",
    "eqeqeq": "off",
    "no-eval": "error",
    "no-undef": "error",
    "no-redeclare": "error",
    "no-caller": "error",
    "no-unused-vars": "error",
    "no-empty": "off",
    "no-new": "off",
    "no-underscore-dangle": "off",
    "one-var": "off",
    "no-plusplus": "off",
    "no-sub": "off",
    "no-trailing-spaces": "off",
    "no-tabs": "off",
  },
}
